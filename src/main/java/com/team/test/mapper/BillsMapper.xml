<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.team.test.mapper.BillsMapper">
  <resultMap id="BaseResultMap" type="com.team.test.entity.Bills">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="time" jdbcType="DATE" property="time" />
    <result column="typeid" jdbcType="INTEGER" property="typeid" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="explain" jdbcType="VARCHAR" property="explain" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, `time`, typeid, price, `explain`
  </sql>
  <select id="selectByExample" parameterType="com.team.test.entity.BillsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from bills
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bills
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from bills
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.team.test.entity.Bills">
    insert into bills (id, title, time, 
      typeid, price, explain
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{time,jdbcType=DATE}, 
      #{typeid,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, #{explain,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.team.test.entity.Bills">
    insert into bills
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="typeid != null">
        typeid,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="explain != null">
        explain,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=DATE},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="explain != null">
        #{explain,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.team.test.entity.Bills">
    update bills
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=DATE},
      </if>
      <if test="typeid != null">
        typeid = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="explain != null">
        `explain` = #{explain,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.team.test.entity.Bills">
    update bills
    set title = #{title,jdbcType=VARCHAR},
      time = #{time,jdbcType=DATE},
      typeid = #{typeid,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      explain = #{explain,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAll" resultType="com.team.test.entity.Bills" parameterType="com.team.test.util.PageUtil">
    SELECT bills.*,(SELECT `name` FROM `type` WHERE typeid=id)AS `name` FROM bills WHERE 1=1
    <if test="nameid!=null">
      and typeid=#{nameid}
    </if>
    <if test="start!=null">
      and time>#{start}
    </if>
    <if test="end!=null">
      and time &lt; `end`
    </if>
  </select>
</mapper>